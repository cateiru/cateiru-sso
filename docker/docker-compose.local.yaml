services:
  backend:
    container_name: backend_app
    build:
      context: ..
      dockerfile_inline: |
        FROM golang:1.21.4-alpine

        RUN apk update && apk add --no-cache ca-certificates git tar curl && update-ca-certificates
        RUN go install github.com/cosmtrek/air@v1.49.0

        WORKDIR /app

        RUN apk add openssh-client && \
            ssh-keygen -t rsa -f /jwt/jwt -N "" -m pem && \
            ssh-keygen -f /jwt/jwt.pub -e -m pkcs8 > /jwt/jwt.pkcs8

        COPY go.mod go.sum ./
        RUN go mod download
    ports:
      - "8080:8080"
    volumes:
      - ..:/app
    depends_on:
      - db
      - gcs
    command: air -c .air.toml
  frontend:
    container_name: frontend_app
    build:
      context: ..
      dockerfile_inline: |
        FROM node:18-alpine

        RUN npm i -g pnpm

        WORKDIR /app
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_HOST=${NEXT_PUBLIC_API_HOST:-http://localhost:8080}
      - NEXT_PUBLIC_SERVER_API_HOST=${NEXT_PUBLIC_SERVER_API_HOST:-http://backend:8080}
      - NEXT_PUBLIC_PUBLICATION_TYPE=local
    volumes:
      - oreore-next-cache:/app/.next
      - oreore-node-modules:/app/node_modules
      - oreore-pnpm-store:/app/.pnpm-store
      - ..:/app
    depends_on:
      - db
      - gcs
    command: sh -c "pnpm i --frozen-lockfile && pnpm dev"
volumes:
  oreore-next-cache:
  oreore-node-modules:
  oreore-pnpm-store:
